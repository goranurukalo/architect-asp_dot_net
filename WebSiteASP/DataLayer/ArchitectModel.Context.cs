//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebSiteASP.DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ArchitectDatabaseEntities : DbContext
    {
        public ArchitectDatabaseEntities()
            : base("name=ArchitectDatabaseEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Image> Images { get; set; }
        public DbSet<PollAnswer> PollAnswers { get; set; }
        public DbSet<PollQuestion> PollQuestions { get; set; }
        public DbSet<PollVote> PollVotes { get; set; }
        public DbSet<Project> Projects { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<Status> Status { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<Menu> Menus { get; set; }
    
        public virtual int spDeleteImage(Nullable<int> idImage)
        {
            var idImageParameter = idImage.HasValue ?
                new ObjectParameter("idImage", idImage) :
                new ObjectParameter("idImage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteImage", idImageParameter);
        }
    
        public virtual int spDeletePollAnswer(Nullable<int> idPollAnswer)
        {
            var idPollAnswerParameter = idPollAnswer.HasValue ?
                new ObjectParameter("idPollAnswer", idPollAnswer) :
                new ObjectParameter("idPollAnswer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeletePollAnswer", idPollAnswerParameter);
        }
    
        public virtual int spDeletePollQuestion(Nullable<int> idPollQuestion)
        {
            var idPollQuestionParameter = idPollQuestion.HasValue ?
                new ObjectParameter("idPollQuestion", idPollQuestion) :
                new ObjectParameter("idPollQuestion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeletePollQuestion", idPollQuestionParameter);
        }
    
        public virtual int spDeleteProject(Nullable<int> idProject)
        {
            var idProjectParameter = idProject.HasValue ?
                new ObjectParameter("idProject", idProject) :
                new ObjectParameter("idProject", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteProject", idProjectParameter);
        }
    
        public virtual int spDeleteUser(Nullable<int> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteUser", idUserParameter);
        }
    
        public virtual int spInsertImage(Nullable<int> idProject, string smallPicURL, string bigPicURL, string imgAlt, string imageName)
        {
            var idProjectParameter = idProject.HasValue ?
                new ObjectParameter("idProject", idProject) :
                new ObjectParameter("idProject", typeof(int));
    
            var smallPicURLParameter = smallPicURL != null ?
                new ObjectParameter("smallPicURL", smallPicURL) :
                new ObjectParameter("smallPicURL", typeof(string));
    
            var bigPicURLParameter = bigPicURL != null ?
                new ObjectParameter("bigPicURL", bigPicURL) :
                new ObjectParameter("bigPicURL", typeof(string));
    
            var imgAltParameter = imgAlt != null ?
                new ObjectParameter("imgAlt", imgAlt) :
                new ObjectParameter("imgAlt", typeof(string));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("imageName", imageName) :
                new ObjectParameter("imageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertImage", idProjectParameter, smallPicURLParameter, bigPicURLParameter, imgAltParameter, imageNameParameter);
        }
    
        public virtual int spInsertPollAnswer(Nullable<int> idPollQuestion, string answer)
        {
            var idPollQuestionParameter = idPollQuestion.HasValue ?
                new ObjectParameter("idPollQuestion", idPollQuestion) :
                new ObjectParameter("idPollQuestion", typeof(int));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertPollAnswer", idPollQuestionParameter, answerParameter);
        }
    
        public virtual int spInsertPollQuestion(string question)
        {
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertPollQuestion", questionParameter);
        }
    
        public virtual int spInsertPollVote(string ipAddress, Nullable<int> idAnswer)
        {
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("ipAddress", ipAddress) :
                new ObjectParameter("ipAddress", typeof(string));
    
            var idAnswerParameter = idAnswer.HasValue ?
                new ObjectParameter("idAnswer", idAnswer) :
                new ObjectParameter("idAnswer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertPollVote", ipAddressParameter, idAnswerParameter);
        }
    
        public virtual int spInsertProject(Nullable<int> idUser, string title, string tag, string description, string mainImageLink)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("tag", tag) :
                new ObjectParameter("tag", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var mainImageLinkParameter = mainImageLink != null ?
                new ObjectParameter("mainImageLink", mainImageLink) :
                new ObjectParameter("mainImageLink", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertProject", idUserParameter, titleParameter, tagParameter, descriptionParameter, mainImageLinkParameter);
        }
    
        public virtual int spUpdateImage(Nullable<int> idImage, string smallPicURL, string bigPicURL, string imgAlt, string imageName, Nullable<int> idLastUser)
        {
            var idImageParameter = idImage.HasValue ?
                new ObjectParameter("idImage", idImage) :
                new ObjectParameter("idImage", typeof(int));
    
            var smallPicURLParameter = smallPicURL != null ?
                new ObjectParameter("smallPicURL", smallPicURL) :
                new ObjectParameter("smallPicURL", typeof(string));
    
            var bigPicURLParameter = bigPicURL != null ?
                new ObjectParameter("bigPicURL", bigPicURL) :
                new ObjectParameter("bigPicURL", typeof(string));
    
            var imgAltParameter = imgAlt != null ?
                new ObjectParameter("imgAlt", imgAlt) :
                new ObjectParameter("imgAlt", typeof(string));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("imageName", imageName) :
                new ObjectParameter("imageName", typeof(string));
    
            var idLastUserParameter = idLastUser.HasValue ?
                new ObjectParameter("idLastUser", idLastUser) :
                new ObjectParameter("idLastUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateImage", idImageParameter, smallPicURLParameter, bigPicURLParameter, imgAltParameter, imageNameParameter, idLastUserParameter);
        }
    
        public virtual int spUpdatePollAnswer(Nullable<int> idPollAnswer, string answer, Nullable<int> idLastUser)
        {
            var idPollAnswerParameter = idPollAnswer.HasValue ?
                new ObjectParameter("idPollAnswer", idPollAnswer) :
                new ObjectParameter("idPollAnswer", typeof(int));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            var idLastUserParameter = idLastUser.HasValue ?
                new ObjectParameter("idLastUser", idLastUser) :
                new ObjectParameter("idLastUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdatePollAnswer", idPollAnswerParameter, answerParameter, idLastUserParameter);
        }
    
        public virtual int spUpdatePollQuestion(Nullable<int> idPollQuestion, string question, Nullable<int> idLastUser)
        {
            var idPollQuestionParameter = idPollQuestion.HasValue ?
                new ObjectParameter("idPollQuestion", idPollQuestion) :
                new ObjectParameter("idPollQuestion", typeof(int));
    
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var idLastUserParameter = idLastUser.HasValue ?
                new ObjectParameter("idLastUser", idLastUser) :
                new ObjectParameter("idLastUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdatePollQuestion", idPollQuestionParameter, questionParameter, idLastUserParameter);
        }
    
        public virtual int spUpdateProject(Nullable<int> idProject, string title, string tag, string description, Nullable<int> numberOfLikes, string mainImageLink, Nullable<int> idLastUser)
        {
            var idProjectParameter = idProject.HasValue ?
                new ObjectParameter("idProject", idProject) :
                new ObjectParameter("idProject", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("tag", tag) :
                new ObjectParameter("tag", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var numberOfLikesParameter = numberOfLikes.HasValue ?
                new ObjectParameter("numberOfLikes", numberOfLikes) :
                new ObjectParameter("numberOfLikes", typeof(int));
    
            var mainImageLinkParameter = mainImageLink != null ?
                new ObjectParameter("mainImageLink", mainImageLink) :
                new ObjectParameter("mainImageLink", typeof(string));
    
            var idLastUserParameter = idLastUser.HasValue ?
                new ObjectParameter("idLastUser", idLastUser) :
                new ObjectParameter("idLastUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateProject", idProjectParameter, titleParameter, tagParameter, descriptionParameter, numberOfLikesParameter, mainImageLinkParameter, idLastUserParameter);
        }
    
        public virtual int spUpdateUser(Nullable<int> idUser, string firstName, string lastName, string email, string password, Nullable<int> idRole, Nullable<int> idStatus, Nullable<int> idLastUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("idRole", idRole) :
                new ObjectParameter("idRole", typeof(int));
    
            var idStatusParameter = idStatus.HasValue ?
                new ObjectParameter("idStatus", idStatus) :
                new ObjectParameter("idStatus", typeof(int));
    
            var idLastUserParameter = idLastUser.HasValue ?
                new ObjectParameter("idLastUser", idLastUser) :
                new ObjectParameter("idLastUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateUser", idUserParameter, firstNameParameter, lastNameParameter, emailParameter, passwordParameter, idRoleParameter, idStatusParameter, idLastUserParameter);
        }
    
        public virtual int spUserDislikedProject(Nullable<int> idProject, Nullable<int> idProjectLik)
        {
            var idProjectParameter = idProject.HasValue ?
                new ObjectParameter("idProject", idProject) :
                new ObjectParameter("idProject", typeof(int));
    
            var idProjectLikParameter = idProjectLik.HasValue ?
                new ObjectParameter("idProjectLik", idProjectLik) :
                new ObjectParameter("idProjectLik", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUserDislikedProject", idProjectParameter, idProjectLikParameter);
        }
    
        public virtual int spUserLikedProject(Nullable<int> idProject, Nullable<int> idUser)
        {
            var idProjectParameter = idProject.HasValue ?
                new ObjectParameter("idProject", idProject) :
                new ObjectParameter("idProject", typeof(int));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUserLikedProject", idProjectParameter, idUserParameter);
        }
    
        public virtual int spInsertUser(string firstName, string lastName, string email, string password, string verificationCode, Nullable<int> idRole, Nullable<int> idStatus)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var verificationCodeParameter = verificationCode != null ?
                new ObjectParameter("verificationCode", verificationCode) :
                new ObjectParameter("verificationCode", typeof(string));
    
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("idRole", idRole) :
                new ObjectParameter("idRole", typeof(int));
    
            var idStatusParameter = idStatus.HasValue ?
                new ObjectParameter("idStatus", idStatus) :
                new ObjectParameter("idStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertUser", firstNameParameter, lastNameParameter, emailParameter, passwordParameter, verificationCodeParameter, idRoleParameter, idStatusParameter);
        }
    
        public virtual int spUpdateProjectWithImg(Nullable<int> idProject, string title, string tag, string description, string mainImageLink, Nullable<int> idLastUser)
        {
            var idProjectParameter = idProject.HasValue ?
                new ObjectParameter("idProject", idProject) :
                new ObjectParameter("idProject", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("tag", tag) :
                new ObjectParameter("tag", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var mainImageLinkParameter = mainImageLink != null ?
                new ObjectParameter("mainImageLink", mainImageLink) :
                new ObjectParameter("mainImageLink", typeof(string));
    
            var idLastUserParameter = idLastUser.HasValue ?
                new ObjectParameter("idLastUser", idLastUser) :
                new ObjectParameter("idLastUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateProjectWithImg", idProjectParameter, titleParameter, tagParameter, descriptionParameter, mainImageLinkParameter, idLastUserParameter);
        }
    
        public virtual int spUpdateProjectWithoutImg(Nullable<int> idProject, string title, string tag, string description, Nullable<int> idLastUser)
        {
            var idProjectParameter = idProject.HasValue ?
                new ObjectParameter("idProject", idProject) :
                new ObjectParameter("idProject", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("tag", tag) :
                new ObjectParameter("tag", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var idLastUserParameter = idLastUser.HasValue ?
                new ObjectParameter("idLastUser", idLastUser) :
                new ObjectParameter("idLastUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateProjectWithoutImg", idProjectParameter, titleParameter, tagParameter, descriptionParameter, idLastUserParameter);
        }
    
        public virtual int spDeleteMenu(Nullable<int> idMenu)
        {
            var idMenuParameter = idMenu.HasValue ?
                new ObjectParameter("idMenu", idMenu) :
                new ObjectParameter("idMenu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteMenu", idMenuParameter);
        }
    
        public virtual int spUpdateMenu(Nullable<int> idMenu, string title, string link, Nullable<int> idRole, Nullable<int> idLastUser)
        {
            var idMenuParameter = idMenu.HasValue ?
                new ObjectParameter("idMenu", idMenu) :
                new ObjectParameter("idMenu", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("idRole", idRole) :
                new ObjectParameter("idRole", typeof(int));
    
            var idLastUserParameter = idLastUser.HasValue ?
                new ObjectParameter("idLastUser", idLastUser) :
                new ObjectParameter("idLastUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateMenu", idMenuParameter, titleParameter, linkParameter, idRoleParameter, idLastUserParameter);
        }
    
        public virtual int spInserteMenu(string title, string link, Nullable<int> idRole)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("idRole", idRole) :
                new ObjectParameter("idRole", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInserteMenu", titleParameter, linkParameter, idRoleParameter);
        }
    
        public virtual int spDeleteRole(Nullable<int> idRole)
        {
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("idRole", idRole) :
                new ObjectParameter("idRole", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteRole", idRoleParameter);
        }
    
        public virtual int spInsertRole(string roleName)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("roleName", roleName) :
                new ObjectParameter("roleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertRole", roleNameParameter);
        }
    
        public virtual int spUpdateRole(Nullable<int> idRole, string roleName, Nullable<int> idLastUser)
        {
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("idRole", idRole) :
                new ObjectParameter("idRole", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("roleName", roleName) :
                new ObjectParameter("roleName", typeof(string));
    
            var idLastUserParameter = idLastUser.HasValue ?
                new ObjectParameter("idLastUser", idLastUser) :
                new ObjectParameter("idLastUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateRole", idRoleParameter, roleNameParameter, idLastUserParameter);
        }
    
        public virtual int spDeleteStatus(Nullable<int> idStatus)
        {
            var idStatusParameter = idStatus.HasValue ?
                new ObjectParameter("idStatus", idStatus) :
                new ObjectParameter("idStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteStatus", idStatusParameter);
        }
    
        public virtual int spInsertStatus(string statusName)
        {
            var statusNameParameter = statusName != null ?
                new ObjectParameter("statusName", statusName) :
                new ObjectParameter("statusName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertStatus", statusNameParameter);
        }
    
        public virtual int spUpdateStatus(Nullable<int> idStatus, string statusName, Nullable<int> idLastUser)
        {
            var idStatusParameter = idStatus.HasValue ?
                new ObjectParameter("idStatus", idStatus) :
                new ObjectParameter("idStatus", typeof(int));
    
            var statusNameParameter = statusName != null ?
                new ObjectParameter("statusName", statusName) :
                new ObjectParameter("statusName", typeof(string));
    
            var idLastUserParameter = idLastUser.HasValue ?
                new ObjectParameter("idLastUser", idLastUser) :
                new ObjectParameter("idLastUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateStatus", idStatusParameter, statusNameParameter, idLastUserParameter);
        }
    
        public virtual int spUpdateUserNoPassword(Nullable<int> idUser, string firstName, string lastName, string email, Nullable<int> idRole, Nullable<int> idStatus, Nullable<int> idLastUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("idRole", idRole) :
                new ObjectParameter("idRole", typeof(int));
    
            var idStatusParameter = idStatus.HasValue ?
                new ObjectParameter("idStatus", idStatus) :
                new ObjectParameter("idStatus", typeof(int));
    
            var idLastUserParameter = idLastUser.HasValue ?
                new ObjectParameter("idLastUser", idLastUser) :
                new ObjectParameter("idLastUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateUserNoPassword", idUserParameter, firstNameParameter, lastNameParameter, emailParameter, idRoleParameter, idStatusParameter, idLastUserParameter);
        }
    
        public virtual int spUpdateImageWithoutImage(Nullable<int> idImage, string imgAlt, string imageName, Nullable<int> idLastUser)
        {
            var idImageParameter = idImage.HasValue ?
                new ObjectParameter("idImage", idImage) :
                new ObjectParameter("idImage", typeof(int));
    
            var imgAltParameter = imgAlt != null ?
                new ObjectParameter("imgAlt", imgAlt) :
                new ObjectParameter("imgAlt", typeof(string));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("imageName", imageName) :
                new ObjectParameter("imageName", typeof(string));
    
            var idLastUserParameter = idLastUser.HasValue ?
                new ObjectParameter("idLastUser", idLastUser) :
                new ObjectParameter("idLastUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateImageWithoutImage", idImageParameter, imgAltParameter, imageNameParameter, idLastUserParameter);
        }
    }
}
